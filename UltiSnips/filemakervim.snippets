# UltiSnips snippets file for filemaker calculations
# Last Change: 2014 Jul 5
# Version: 2.0a1
# Language: UltiSnips
# Maintainer: Charles Ross <chivalry@mac.com>
# License: The MIT License

# ------------------------------------------------------------------------------
# Python library
global !p
def complete(t, opts):
	if t:
		opts = [ m[len(t):] for m in opts if m.startswith(t) ]
	if len(opts) == 1:
		return opts[0]
	return '(' + '|'.join(opts) + ')'
endglobal

global !p
def create_function_template(*args):
	if len(args) == 2:
		return args[0] + '( ${0:' + args[1] + '} )'
	return args[1]
endglobal

snippet sample
status $1`!p snip.rv=complete(t[1], ['new', 'incomplete', 'invalid'])`
endsnippet

snippet ar
`!p snip.rv = create_function_template( 'Func', 'param' )`
endsnippet

# ------------------------------------------------------------------------------
# Text functions

snippet char
Char( ${0:number} )
endsnippet

snippet cha
Char( ${0:number} )
endsnippet

snippet code
code( ${0:text} )
endsnippet

snippet cod
code( ${0:text} )
endsnippet

snippet exact
Exact(
	${1:originaltext};
	${2:comparisontext}
)
endsnippet

snippet exa
Exact(
	${1:originaltext};
	${2:comparisontext}
)
endsnippet

snippet filter
Filter(
	${1:texttofilter};
	${2:filtertext}
)
endsnippet

snippet filterValues
FilterValues(
	${1:textToFilter};
	${2:filterValues}
)
endsnippet

snippet fil
Filter(
	${1:texttofilter};
	${2:filtertext}
)
endsnippet

snippet filv
FilterValues(
	${1:textToFilter};
	${2:filterValues}
)
endsnippet

snippet getascss
GetAsCSS( ${0:text} )
endsnippet

snippet getc
GetAsCss( ${0:text} )
endsnippet

snippet getasdate
GetAsDate( ${0:text} )
endsnippet

snippet getd
GetAsDate( ${0:text} )
endsnippet

snippet getasnumber
GetAsNumber( ${0:text} )
endsnippet

snippet getn
GetAsNumber( ${0:text} )
endsnippet

snippet getassvg
GetAsSVG( ${0:text} )
endsnippet

snippet gets
GetAsSVG( ${0:text} )
endsnippet

snippet getastext
GetAsText( ${0:data} )
endsnippet

snippet gett
GetAsText( ${0:data} )
endsnippet

snippet getastime
GetAsTime( ${0:text} )
endsnippet

snippet geti
GetAsTime( ${0:text} )
endsnippet

snippet getastimestamp
GetAsTimestamp( ${0:text} )
endsnippet

snippet getm
GetAsTimestamp( ${0:text} )
endsnippet

snippet getasurlencoded
GetAsURLEncoded( ${0:text} )
endsnippet

snippet getu
GetAsURLEncoded( ${0:text} )
endsnippet

snippet getvalue
GetValues(
	${1:listOfValues};
	${2:valueNumber}
)
endsnippet

snippet getv
GetValues(
	${1:listOfValues};
	${2:valueNumber}
)
endsnippet

snippet hiragana
Hiragana( ${0:text} )
endsnippet

snippet hir
Hiragana( ${0:text} )
endsnippet

snippet kanahankaku
KanaHankaku( ${0:text} )
endsnippet

snippet kanah
KanaHankaku( ${0:text} )
endsnippet

snippet kanazenkaku
KanaZenkaku( ${0:text} )
endsnippet

snippet kanaz
KanaZenkaku( ${0:text} )
endsnippet

snippet kanjinumeral
KanjiNumeral( ${0:text} )
endsnippet

snippet kanj
KanjiNumeral( ${0:text} )
endsnippet

snippet katakana
Katakana( ${0:text} )
endsnippet

snippet kata
Katakana( ${0:text} )
endsnippet

snippet left
Left(
	${1:text};
	${2:numberOfCharacters}
)
endsnippet

snippet leftvalues
LeftValues(
	${1:text};
	${2:numberOfValues}
)
endsnippet

snippet leftv
LeftValues(
	${1:text};
	${2:numberOfValues}
)
endsnippet

snippet leftwords
LeftWords(
	${1:text};
	${2:numberOfWords}
)
endsnippet

snippet leftw
LeftWords(
	${1:text};
	${2:numberOfWords}
)
endsnippet

snippet length
Length( ${0:field} )
endsnippet

snippet len
Length( ${0:field} )
endsnippet

snippet lower
Lower( ${0:text} )
endsnippet

snippet low
Lower( ${0:text} )
endsnippet

snippet middle
Middle(
	${1:text};
	${2:start};
	#{3:numberOfCharacters}
)
endsnippet

snippet mid
Middle(
	${1:text};
	${2:start};
	#{3:numberOfCharacters}
)
endsnippet

snippet middlevalues
MiddleValues(
	${1:text};
	${2:startingValue};
	${3:numberOfValues}
)
endsnippet

snippet midv
MiddleValues(
	${1:text};
	${2:startingValue};
	${3:numberOfValues}
)
endsnippet

snippet middlewords
MiddleWords(
	${1:text};
	${2:startingWord};
	${3:numberOfWords}
)
endsnippet

snippet midw
MiddleWords(
	${1:text};
	${2:startingWord};
	${3:numberOfWords}
)
endsnippet

snippet numtojtext
NumToJText(
	${1:number};
	${2:separator};
	${3:characterType}
)
endsnippet

snippet numj
NumToJText(
	${1:number};
	${2:separator};
	${3:characterType}
)
endsnippet

snippet patterncount
PatternCount(
	${1:text};
	${2:searchString}
)
endsnippet

snippet pat
PatternCount(
	${1:text};
	${2:searchString}
)
endsnippet

snippet position
Position(
	${1:text};
	${2:searchString};
	${3:start};
	${4:occurrence}
)
endsnippet

snippet pos
Position(
	${1:text};
	${2:searchString};
	${3:start};
	${4:occurrence}
)
endsnippet

snippet proper
Proper( ${1:text} )
endsnippet

snippet pro
Proper( ${1:text} )
endsnippet

snippet quote
Quote( ${1:text} )
endsnippet

snippet quo
Quote( ${1:text} )
endsnippet

snippet replace
Replace(
	${1:text};
	${2:start};
	${3:numberOfCharacters};
	${4:replacementText}
)
endsnippet

snippet repl
Replace(
	${1:text};
	${2:start};
	${3:numberOfCharacters};
	${4:replacementText}
)
endsnippet

snippet right
Right(
	${1:text};
	${2:numberOfCharacters}
)
endsnippet

snippet rit
Right(
	${1:text};
	${2:numberOfCharacters}
)
endsnippet

snippet rightvalues
RightValues(
	${1:text};
	${2:numberOfValues}
)
endsnippet

snippet ritv
RightValues(
	${1:text};
	${2:numberOfValues}
)
endsnippet

snippet rightwords
RightWords(
	${1:text};
	${2:numberOfWords}
)
endsnippet

snippet ritw
RightWords(
	${1:text};
	${2:numberOfWords}
)
endsnippet

snippet romanhankaku
RomanHankaku( ${0:text} )
endsnippet

snippet romh
RomanHankaku( ${0:text} )
endsnippet

snippet romanzenkaku
RomanZenkaku( ${0:text} )
endsnippet

snippet romz
RomanZenkaku( ${0:text} )
endsnippet

snippet serialincrement
SerialIncrement(
	${1:text};
	${2:incrementby)
)
endsnippet

snippet seri
SerialIncrement(
	${1:text};
	${2:incrementby)
)
endsnippet

snippet substitute
Substitute(
	${1:text};
	${2:searchString};
	${3:replaceString}
)
endsnippet

snippet sub
Substitute(
	${1:text};
	${2:searchString};
	${3:replaceString}
)
endsnippet

snippet trim
Trim( ${0:text} )
endsnippet

snippet trimall
TrimAll(
	${1:text};
	$2`!p snip.rv = complete(t[2], ['True', 'False'])`;
	$3`!p snip.rv = complete( t[3], ['0', '1', '2', '3'])`;
)
endsnippet

snippet trima
TrimAll(
	${1:text};
	$2`!p snip.rv = complete(t[2], ['True', 'False'])`;
	$3`!p snip.rv = complete( t[3], ['0', '1', '2', '3'])`;
)
endsnippet

snippet upper
Upper( ${0:text} )
endsnippet

snippet upp
Upper( ${0:text} )
endsnippet

snippet valuecaount
ValueCount( ${0:text} )
endsnippet

snippet valc
ValueCount( ${0:text} )
endsnippet

snippet wordcount
WordCount( ${0:text} )
endsnippet

snippet wordc
WordCount( ${0:text} )
endsnippet

# ------------------------------------------------------------------------------
# Text formatting functions

snippet rgb
RBG(
	${1:red};
	${2:green};
	${3:blue}
)
endsnippet

snippet textcolor
TextColor(
	${1:text};
	${2:RGB(
		${3:red};
		${4:green};
		${5:blue}
	)}
)
endsnippet

snippet textc
TextColor(
	${1:text};
	${2:RGB(
		${3:red};
		${4:green};
		${5:blue}
	)}
)
endsnippet

snippet textcolorremove
TextColorRemove(
	${1:text}${2:;
	${3:RGB(
		${4:red};
		${5:green};
		${6:blue}
	)}}
)
endsnippet

snippet textcr
TextColorRemove(
	${1:text}${2:;
	${3:RGB(
		${4:red};
		${5:green};
		${6:blue}
	)}}
)
endsnippet

snippet textfont
TextFont(
	${1:text};
	${2:fontName}${3:;
	$4`!p snip.rv = complete(t[4], ['Roman', 'Greek', 'Cyrillic', 'CentralEurope',
		'ShiftJIS', 'TraditionalChinese', 'SimplifiedChinese', 'OEM', 'Symbol',
		'Other'])`}
)
endsnippet

snippet textf
TextFont(
	${1:text};
	${2:fontName}${3:;
	$4`!p snip.rv = complete(t[4], ['Roman', 'Greek', 'Cyrillic', 'CentralEurope',
		'ShiftJIS', 'TraditionalChinese', 'SimplifiedChinese', 'OEM', 'Symbol',
		'Other'])`}
)
endsnippet

snippet textfontremove
TextFontRemove(
	${1:text}${2:;
	${3:fontToRemove};
	$4`!p snip.rv = complete(t[4], ['Roman', 'Greek', 'Cyrillic', 'CentralEurope',
		'ShiftJIS', 'TraditionalChinese', 'SimplifiedChinese', 'OEM', 'Symbol',
		'Other'])`}
)
endsnippet

snippet textfr
TextFontRemove(
	${1:text}${2:;
	${3:fontToRemove};
	$4`!p snip.rv = complete(t[4], ['Roman', 'Greek', 'Cyrillic', 'CentralEurope',
		'ShiftJIS', 'TraditionalChinese', 'SimplifiedChinese', 'OEM', 'Symbol',
		'Other'])`}
)
endsnippet

snippet textsize
TextSize(
	${1:text};
	${2:fontSize}
)
endsnippet

snippet texts
TextSize(
	${1:text};
	${2:fontSize}
)
endsnippet

snippet textsizeremove
TextSizeRemove(
	${1:text}${2:;
	${3:sizeToRemove}}
)
endsnippet

snippet textsr
TextSizeRemove(
	${1:text}${2:;
	${3:sizeToRemove}}
)
endsnippet

snippet textstyleadd
TextStyleAdd(
	${1:text};
	$2`!p snip.rv = complete(t[2], ['Plain', 'Bold', 'Italic', 'Underline',
		'HighlightYellow', 'Condense', 'Extend', 'Strikethrough', 'SmallCaps',
		'Superscript', 'Subscript', 'Uppercase', 'Lowercase', 'Titlecase',
		'WordUnderline', 'DoubleUnderline', 'AllStyles'])`
)
endsnippet

snippet textsta
TextStyleAdd(
	${1:text};
	$2`!p snip.rv = complete(t[2], ['Plain', 'Bold', 'Italic', 'Underline',
		'HighlightYellow', 'Condense', 'Extend', 'Strikethrough', 'SmallCaps',
		'Superscript', 'Subscript', 'Uppercase', 'Lowercase', 'Titlecase',
		'WordUnderline', 'DoubleUnderline', 'AllStyles'])`
)
endsnippet

snippet textstyleremove
TextStyleRemove(
	${1:text};
	$2`!p snip.rv = complete(t[2], ['Plain', 'Bold', 'Italic', 'Underline',
		'HighlightYellow', 'Condense', 'Extend', 'Strikethrough', 'SmallCaps',
		'Superscript', 'Subscript', 'Uppercase', 'Lowercase', 'Titlecase',
		'WordUnderline', 'DoubleUnderline', 'AllStyles'])`
)
endsnippet

snippet textstr
TextStyleRemove(
	${1:text};
	$2`!p snip.rv = complete(t[2], ['Plain', 'Bold', 'Italic', 'Underline',
		'HighlightYellow', 'Condense', 'Extend', 'Strikethrough', 'SmallCaps',
		'Superscript', 'Subscript', 'Uppercase', 'Lowercase', 'Titlecase',
		'WordUnderline', 'DoubleUnderline', 'AllStyles'])`
)
endsnippet

# ------------------------------------------------------------------------------
# Number functions

snippet abs
Abs( ${0:number} )
endsnippet

snippet ceiling
Ceiling( ${0:number} )
endsnippet

snippet ceil
Ceiling( ${0:number} )
endsnippet

snippet combination
Combination(
	${1:setSize};
	${2:numberOfChoices}
)
endsnippet

snippet comb
Combination(
	${1:setSize};
	${2:numberOfChoices}
)
endsnippet

snippet div
Div(
	${1:number};
	${2:divisor}
)
endsnippet

snippet exp
Exp( ${0:number} )
endsnippet

snippet factorial
Factorial(
	${1:number}${2:;
	${3:numberOfFactors}}
}
endsnippet

snippet fact
Factorial(
	${1:number}${2:;
	${3:numberOfFactors}}
}
endsnippet

snippet floor
Floor( ${0:number} )
endsnippet

snippet flo
Floor( ${0:number} )
endsnippet

snippet int
Int( ${0:number} )
endsnippet

snippet lg
Lg( ${0:number} )
endsnippet

snippet ln
Ln( ${0:number} )
endsnippet

snippet log
Log( ${0:number} )
endsnippet

snippet mod
Mod(
	${1:number};
	${2:divisor}
)
endsnippet

snippet rand
Random
endsnippet

snippet round
Round(
	${1:number};
	${2:precision}
)
endsnippet

snippet setprecision
SetPrecision(
	${1:expression};
	${2:precision}
)
endsnippet

snippet setp
SetPrecision(
	${1:expression};
	${2:precision}
)
endsnippet

snippet sign
Sign( ${0:number} )
endsnippet

snippet sqrt
Sqrt( ${0:number} )
endsnippet

snippet truncate
Truncate(
	${1:number};
	${2:precision}
)
endsnippet

snippet trunc
Truncate(
	${1:number};
	${2:precision}
)
endsnippet

# ------------------------------------------------------------------------------
# Date functions

snippet date
Date(
	${1:month};
	${2:day};
	${3:year}
)
endsnippet

snippet day
Day( ${0:date} )
endsnippet

snippet dayname
DayName( ${0:date} )
endsnippet

snippet dayn
DayName( ${0:date} )
endsnippet

snippet daynamej
DayNameJ( ${0:date} )
endsnippet

snippet daynj
DayNameJ( ${0:date} )
endsnippet

snippet dayofweek
DayOfWeek( ${0:date} )
endsnippet

snippet dow
DayOfWeek( ${0:date} )
endsnippet

snippet dayofyear
DayOfYear( ${0:date} )
endsnippet

snippet doy
DayOfYear( ${0:date} )
endsnippet

snippet month
Month( ${0:date} )
endsnippet

snippet mon
Month( ${0:date} )
endsnippet

snippet monthname
MonthName( ${0:date} )
endsnippet

snippet monn
MonthName( ${0:date} )
endsnippet

snippet monthnamej
MonthNameJ( ${0:date} )
endsnippet

snippet monnj
MonthNameJ( ${0:date} )
endsnippet

snippet weekofyear
WeekOfYear( ${0:date} )
endsnippet

snippet woy
WeekOfYear( ${0:date} )
endsnippet

snippet weekofyearfiscal
WeekOfYearFiscal( ${0:date} )
endsnippet

snippet woyf
WeekOfYearFiscal( ${0:date} )
endsnippet

snippet year
Year( ${0:date} )
endsnippet

snippet yr
Year( ${0:date} )
endsnippet

snippet yearname
YearName(
	${1:date};
	$2`!p snip.rv = complete( t[2], ['0', '1', '2'])`
)
endsnippet

snippet yrn
YearName(
	${1:date};
	$2`!p snip.rv = complete( t[2], ['0', '1', '2'])`
)
endsnippet

# ------------------------------------------------------------------------------
# Time functions

snippet hour
Hour( ${0:time} )
endsnippet

snippet hr
Hour( ${0:time} )
endsnippet

snippet minute
Minute( ${0:time} )
endsnippet

snippet min
Minute( ${0:time} )
endsnippet

snippet seconds
Seconds( ${0:time} )
endsnippet

snippet secs
Seconds( ${0:time} )
endsnippet

snippet time
Time(
	${1:hours};
	${2:minutes};
	${3:seconds}
)
endsnippet

# ------------------------------------------------------------------------------
# Timestamp functions

snippet timestamp
Timestamp(
	${1::Date(
		${2:day};
		${3:month};
		${4:year}
	)};
	${5::Time(
		${6:hours};
		${7:minutes};
		${8:seconds}
	)}
)
endsnippet

snippet ts
Timestamp(
	${1::Date(
		${2:day};
		${3:month};
		${4:year}
	)};
	${5::Time(
		${6:hours};
		${7:minutes};
		${8:seconds}
	)}
)
endsnippet

# ------------------------------------------------------------------------------
# Container functions

snippet base64decode
Base64Decode(
	${1:text}${2:;
	${3:fileNameWithExtension}}
)
endsnippet

snippet based
Base64Decode(
	${1:text}${2:;
	${3:fileNameWithExtension}}
)
endsnippet

snippet base64encode
Base64Encode( ${0:sourceField} )
endsnippet

# ------------------------------------------------------------------------------
# Logical functions

snippet let "The Let() function formatted for my default"
Let(
	[
		${1:_var} = ${2:value}
	];

	${0:result}
)
endsnippet

