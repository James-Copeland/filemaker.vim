# UltiSnips snippets file for filemaker calculations
# Last Change: 2014 Jul 7
# Version: 1.0
# Language: UltiSnips/Python
# Maintainer: Charles Ross <chivalry@mac.com>
# License: The MIT License

# ------------------------------------------------------------------------------
# Python library

global !p
def complete( t, opts ):
	if t:
#		non_t = []
#		for m in opts:
#			if m.startswith(t):
#				non_t.append(m[len(t):])
#		opts = non_t
		opts = [ m[len(t):] for m in opts if m.startswith(t) ]
		
	if len(opts) == 1:
		return opts[0]

	return '(' + '|'.join(opts) + ')'
endglobal

# --------------------------------------
global !p
def add_space():
	return ' ' if snip.opt( 'g:FMVAddSpaceAfterFunction', True ) else ''
endglobal

# --------------------------------------
global !p
def pad_spaces():
	return ' ' if snip.opt( 'g:FMVPadSpacesWithinParens', True ) else ''
endglobal

# --------------------------------------
global !p
def open_paren():
	return add_space() + '(' + pad_spaces()
endglobal

# --------------------------------------
global !p
def close_paren():
	return pad_spaces() + ')'
endglobal

# --------------------------------------
global !p
def get_filename():
	if snip.opt( 'g:FMVFillInGetFileName', True ):
		open_paren = add_space() + '(' + pad_spaces()
		close_paren = pad_spaces() + ')'
		return 'Get' + open_paren + 'fileName' + close_paren
	else:
		return 'fileName'
endglobal

# --------------------------------------
global !p
def font_scripts():
	return ['Roman', 'Greek', 'Cyrillic', 'CentralEurope', 'ShiftJIS',
					'TraditionalChinese', 'SimplifiedChinese', 'OEM', 'Symbol',
					'Other']
endglobal

# --------------------------------------
global !p
def font_styles():
	return ['Plain', 'Bold', 'Italic', 'Underline', 'HighlightYellow', 'Condense',
					'Extend', 'Strikethrough', 'SmallCaps', 'Superscript', 'Subscript',
					'Uppercase', 'Lowercase', 'Titlecase', 'WordUnderline',
					'DoubleUnderline', 'AllStyles']
endglobal

# --------------------------------------
# Not used but kept as a reminder to not forget about hopes for this kind of
# feature
global !p
def create_function_template(*args):
	if len(args) == 2:
		return args[0] + '( ${0:' + args[1] + '} )'
	return args[1]
endglobal

snippet ar
`!p snip.rv = create_function_template( 'Func', 'param' )`
endsnippet

# --------------------------------------
snippet sample
status $1`!p snip.rv=complete(t[1], ['new', 'incomplete', 'invalid'])`
endsnippet

# ------------------------------------------------------------------------------
# Text functions

snippet "char?" "Char" r
Char`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "code?" "Code" r
snippet code "Code"
Code`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet
snippet cod "Code"
Code`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "exa(ct)?" "Exact" r
Exact`!p snip.rv = open_paren()`
	${1:originaltext};
	${2:comparisontext}
)
endsnippet

snippet "fil(ter)?" "Filter" r
Filter`!p snip.rv = open_paren()`
	${1:texttofilter};
	${2:filtertext}
)
endsnippet

snippet "filtervalues|filv" "FilterValues" r
FilterValues`!p snip.rv = open_paren()`
	${1:textToFilter};
	${2:filterValues}
)
endsnippet

snippet "getascss|getc" "GetAsCSS" r
GetAsCSS`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "getasdate|getd" "GetAsDate" r
GetAsDate`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "getasnumber|getn" "GetAsNumber" r
GetAsNumber`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "getassvg|gets" "GetAsSVG" r
GetAsSVG`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "getastext|gett" "GetAsText" r
GetAsText`!p snip.rv = open_paren()`${0:data}`!p
snip.rv = close_paren()`
endsnippet

snippet "getastime|geti" "GetAsTime" r
GetAsTime`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "getastimestamp|getm" "GetAsTimestamp" r
GetAsTimestamp`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "getasurlencoded|getu" "GetAsURLEncoded" r
GetAsURLEncoded`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "getvalue|getv" "GetValues" r
GetValue`!p snip.rv = open_paren()`
	${1:listOfValues};
	${2:valueNumber}
)
endsnippet

snippet "hir(agana)?" "Hiragana" r
Hiragana`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "kanah(ankaku)?" "Kanahankaku" r
KanaHankaku`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "kanaz(enkaku)?" "Kanazenkaku" r
KanaZenkaku`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "kanj(inumeral)?" "KanjiNumeral" r
KanjiNumeral`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "kata(kana)?" "Katakana" r
Katakana`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "left?" "Left" r
Left`!p snip.rv = open_paren()`
	${1:text};
	${2:numberOfCharacters}
)
endsnippet

snippet "leftv(alues)?" "LeftValues" r
LeftValues`!p snip.rv = open_paren()`
	${1:text};
	${2:numberOfValues}
)
endsnippet

snippet "leftw(ords)?" "LeftWords" r
LeftWords`!p snip.rv = open_paren()`
	${1:text};
	${2:numberOfWords}
)
endsnippet

snippet "len(gth)?" "Length" r
Length`!p snip.rv = open_paren()`${0:field}`!p
snip.rv = close_paren()`
endsnippet

snippet "low(er)?" "Lower" r
Lower`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "mid(dle)?" "Middle" r
Middle`!p snip.rv = open_paren()`
	${1:text};
	${2:start};
	${3:numberOfCharacters}
)
endsnippet

snippet "middlevalues|midv" "MiddleValues" r
MiddleValues`!p snip.rv = open_paren()`
	${1:text};
	${2:startingValue};
	${3:numberOfValues}
)
endsnippet

snippet "middlewords|midw" "MiddleWords" r
MiddleWords`!p snip.rv = open_paren()`
	${1:text};
	${2:startingWord};
	${3:numberOfWords}
)
endsnippet

snippet "numtojtext|numj" "NumToJText" r
NumToJText`!p snip.rv = open_paren()`
	${1:number};
	${2:separator};
	${3:characterType}
)
endsnippet

# TOTO: Resolve conflict with Count
snippet "pat(terncount)?" "PatternCount" r
PatternCount`!p snip.rv = open_paren()`
	${1:text};
	${2:searchString}
)
endsnippet

snippet "pos(ition)?" "Position" r
Position`!p snip.rv = open_paren()`
	${1:text};
	${2:searchString};
	${3:start};
	${4:occurrence}
)
endsnippet

snippet "pro(per)?" "Proper" r
Proper`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "quo(te)?" "Quote" r
Quote`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "repl(ace)?" "Replace" r
Replace`!p snip.rv = open_paren()`
	${1:text};
	${2:start};
	${3:numberOfCharacters};
	${4:replacementText}
)
endsnippet

snippet "right|rit" "Right" r
Right`!p snip.rv = open_paren()`
	${1:text};
	${2:numberOfCharacters}
)
endsnippet

snippet "rightvalues|ritv" "RightValues" r
RightValues`!p snip.rv = open_paren()`
	${1:text};
	${2:numberOfValues}
)
endsnippet

snippet "rightwords|ritw" "RightWords" r
RightWords`!p snip.rv = open_paren()`
	${1:text};
	${2:numberOfWords}
)
endsnippet

snippet "romanhankaku|romh" "RomanHankaku" r
RomanHankaku`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "romanzenkaku|romz" "RomanZenkaku" r
RomanZenkaku`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "serialincrement|seri" "SerialIncrement" r
SerialIncrement`!p snip.rv = open_paren()`
	${1:text};
	${2:incrementBy}
)
endsnippet

snippet "sub(stitute)?" "Substitute" r
Substitute`!p snip.rv = open_paren()`
	${1:text};
	${2:searchString};
	${3:replaceString}
)
endsnippet

snippet trim "Trim"
Trim`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "trima(ll)?" "TrimAll" r
TrimAll`!p snip.rv = open_paren()`
	${1:text};
	$2`!p snip.rv = complete( t[2], ['True', 'False'] )`;
	$3`!p snip.rv = complete( t[3], ['0', '1', '2', '3'] )`;
)
endsnippet

snippet "upp(er)?" "Upper" r
Upper`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "valuecount|valc" "ValueCount" r
ValueCount`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

snippet "wordc(ount)?" "WordCount" r
WordCount`!p snip.rv = open_paren()`${0:text}`!p
snip.rv = close_paren()`
endsnippet

# ------------------------------------------------------------------------------
# Text formatting functions

snippet rgb "RGB"
RBG`!p snip.rv = open_paren()`
	${1:red};
	${2:green};
	${3:blue}
)
endsnippet

snippet "textc(olor)?" "TextColor" r
TextColor`!p snip.rv = open_paren()`
	${1:text};
	${2:RGB`!p snip.rv = open_paren()`
		${3:red};
		${4:green};
		${5:blue}
	)}
)
endsnippet

snippet "textcolorremove|textcr" "TextColorRemove" r
TextColorRemove`!p snip.rv = open_paren()`
	${1:text}${2:;
	${3:RGB`!p snip.rv = open_paren()`
		${4:red};
		${5:green};
		${6:blue}
	)}}
)
endsnippet

snippet "textf(ont)?" "TextFont" r
TextFont`!p snip.rv = open_paren()`
	${1:text};
	${2:fontName}${3:;
	$4`!p snip.rv = complete( t[4], font_scripts() )`}
)
endsnippet

snippet "textfontremove|textfr" "TextFontRemove" r
TextFontRemove`!p snip.rv = open_paren()`
	${1:text}${2:;
	${3:fontToRemove};
	$4`!p snip.rv = complete( t[4], font_scripts() )`}
)
endsnippet

snippet "texts(ize)?" "TextSize" r
TextSize`!p snip.rv = open_paren()`
	${1:text};
	${2:fontSize}
)
endsnippet

snippet "textsizeremove|textsr" "TextSizeRemove" r
TextSizeRemove`!p snip.rv = open_paren()`
	${1:text}${2:;
	${3:sizeToRemove}}
)
endsnippet

snippet "textstyleadd|textsta" "TextStyleAdd" r
TextStyleAdd`!p snip.rv = open_paren()`
	${1:text};
	$2`!p snip.rv = complete( t[2], font_styles() )`
)
endsnippet

snippet "textstyleremove|textstr" "TextStyleRemove" r
TextStyleRemove`!p snip.rv = open_paren()`
	${1:text};
	$2`!p snip.rv = complete( t[2], font_styles() )`
)
endsnippet

# ------------------------------------------------------------------------------
# Number functions

snippet abs "Abs"
Abs`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet "ceil(ing)?" "Ceiling" r
Ceiling`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet "comb(ination)?" "Combination" r
Combination`!p snip.rv = open_paren()`
	${1:setSize};
	${2:numberOfChoices}
)
endsnippet

snippet div "Div"
Div`!p snip.rv = open_paren()`
	${1:number};
	${2:divisor}
)
endsnippet

snippet exp "Exp"
Exp`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet "fact(orial)?" "Factorial" r
Factorial`!p snip.rv = open_paren()`
	${1:number}${2:;
	${3:numberOfFactors}}
}
endsnippet

snippet "flo(or)?" "Floor" r
Floor`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet int "Int"
Int`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet lg "Lg"
Lg`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet ln "Ln"
Ln`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet log "Log"
Log`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet mod "Mod"
Mod`!p snip.rv = open_paren()`
	${1:number};
	${2:divisor}
)
endsnippet

snippet rand "Random"
Random
endsnippet

snippet "rou(nd)?" "Round" r
Round`!p snip.rv = open_paren()`
	${1:number};
	${2:precision}
)
endsnippet

snippet "setp(recision)?" "SetPrecision" r
SetPrecision`!p snip.rv = open_paren()`
	${1:expression};
	${2:precision}
)
endsnippet

snippet sign "Sign"
Sign`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet sqrt "Sqrt"
Sqrt`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet "trunc(ate)?" "Truncate" r
Truncate`!p snip.rv = open_paren()`
	${1:number};
	${2:precision}
)
endsnippet

# ------------------------------------------------------------------------------
# Date functions

snippet date "Date"
Date`!p snip.rv = open_paren()`
	${1:month};
	${2:day};
	${3:year}
)
endsnippet

snippet day "Day"
Day`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet

snippet "dayn(ame)?" "DayName" r
DayName`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet

snippet "daynamej|daynj" "DayNameJ" r
DayNameJ`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet

snippet "dayofweek|dow" "DayOfWeek" r
DayOfWeek`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet

snippet "dayofyear|doy" "DayOfYear" r
DayOfYear`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet

snippet "mon(th)?" "Month" r
Month`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet

snippet "monthname|monn" "MonthName" r
MonthName`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet

snippet "monthnamej|monnj" "MonthNameJ" r
MonthNameJ`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet

snippet "weekofyear|woy" "WeekOfYear" r
WeekOfYear`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet

snippet "weekofyearfiscal|woyf" "WeekOfYearFiscal" r
WeekOfYearFiscal( ${0:date} )
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "year|yr" "Year" r
snippet year "Year"
Year`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet
snippet yr "Year"
Year`!p snip.rv = open_paren()`${0:date}`!p
snip.rv = close_paren()`
endsnippet

snippet "yearname|yrn" "YearName" r
YearName`!p snip.rv = open_paren()`
	${1:date};
	$2`!p snip.rv = complete( t[2], ['0', '1', '2'] )`
)
endsnippet

# ------------------------------------------------------------------------------
# Time functions

snippet "hour|hr" "Hour" r
Hour`!p snip.rv = open_paren()`${0:time}`!p
snip.rv = close_paren()`
endsnippet

snippet "minu(te)?" "Minute" r
Minute`!p snip.rv = open_paren()`${0:time}`!p
snip.rv = close_paren()`
endsnippet

snippet "seconds|secs" "Seconds" r
Seconds`!p snip.rv = open_paren()`${0:time}`!p
snip.rv = close_paren()`
endsnippet

snippet time
Time`!p snip.rv = open_paren()`
	${1:hours};
	${2:minutes};
	${3:seconds}
)
endsnippet

# ------------------------------------------------------------------------------
# Timestamp functions

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "timestamp|ts" "Timestamp" r
snippet timestamp "Timestamp"
Timestamp`!p snip.rv = open_paren()`
	${1::Date`!p snip.rv = open_paren()`
		${2:day};
		${3:month};
		${4:year}
	)};
	${5::Time`!p snip.rv = open_paren()`
		${6:hours};
		${7:minutes};
		${8:seconds}
	)}
)
endsnippet
snippet ts "Timestamp"
Timestamp`!p snip.rv = open_paren()`
	${1::Date`!p snip.rv = open_paren()`
		${2:day};
		${3:month};
		${4:year}
	)};
	${5::Time`!p snip.rv = open_paren()`
		${6:hours};
		${7:minutes};
		${8:seconds}
	)}
)
endsnippet
# ------------------------------------------------------------------------------
# Container functions

snippet "base64decode|based" "Base64Decode" r
Base64Decode`!p snip.rv = open_paren()`
	${1:text}${2:;
	${3:fileNameWithExtension}}
)
endsnippet

snippet "base64encode|basee" "Base64Encode" r
Base64Encode`!p snip.rv = open_paren()`${0:sourceField}`!p
snip.rv = close_paren()`
endsnippet

snippet "getcontainerattribute|getcatt" "GetContainerAttribute" r
GetContainerAttribute`!p snip.rv = open_paren()`
	${1:sourceField};
	${2:"$3`!p snip.rv = complete( t[3], ['filename', 'MD5', 'storageType',
		'fileSize', 'internalSize', 'externalSize', 'externalFiles', 'width',
		'height', 'dpiWidth', 'dpiHeight', 'transparency', 'orientation', 'created',
		'modified', 'latitude', 'longitude', 'make', 'model', 'title', 'artist',
		'album', 'year', 'track', 'genre', 'composer', 'coverArt', 'duration',
		'bitRate', 'barcodeText', 'barcodeType', 'signed', 'general', 'audio',
		'image', 'photo', 'barcode', 'signature', 'all'] )`"}
)
endsnippet

snippet "geth(eight)?" "GetHeight" r
GetHeight`!p snip.rv = open_paren()`${0:field}`!p
snip.rv = close_paren()`
endsnippet

snippet "getth(umbnail)?" "GetThumbnail" r
GetThumbnail`!p snip.rv = open_paren()`
	${1:field};
	${2:width};
	${3:height}
)
endsnippet

snippet "getw(idth)?" "GetWidth" r
GetWidth`!p snip.rv = open_paren()`${0:field}`!p
snip.rv = close_paren()`
endsnippet

snippet "ver(ifycontainer)?" "VerifyContainer" r
VerifyContainer`!p snip.rv = open_paren()`${0:field}`!p
snip.rv = close_paren()`
endsnippet

# ------------------------------------------------------------------------------
# Aggregate functions

snippet "average|avg" "Average" r
Average`!p snip.rv = open_paren()`${1:field}${2:; ${3:field...}}`!p
snip.rv = close_paren()`
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "count|cnt" "Count" r
snippet count "Count"
Count`!p snip.rv = open_paren()`${1:field}${2:; ${3:field...}}`!p
snip.rv = close_paren()`
endsnippet
snippet cnt "Count"
Count`!p snip.rv = open_paren()`${1:field}${2:; ${3:field...}}`!p
snip.rv = close_paren()`
endsnippet

snippet list "List"
List`!p snip.rv = open_paren()`
	${1:field}${2:;
	${3:field...}}
)
endsnippet

snippet max "Max"
Max`!p snip.rv = open_paren()`${1:field}${2:; ${3:field...}}`!p
snip.rv = close_paren()`
endsnippet

snippet min "Min"
Min`!p snip.rv = open_paren()`${1:field}${2:; ${3:field...}}`!p
snip.rv = close_paren()`
endsnippet

snippet "std(ev)?" "StDev" r
StDev`!p snip.rv = open_paren()`${1:field}${2:; ${3:field...}}`!p
snip.rv = close_paren()`
endsnippet

snippet "stdevp|stdp" "StDevP" r
StDevP`!p snip.rv = open_paren()`${1:field}${2:; ${3:field...}}`!p
snip.rv = close_paren()`
endsnippet

snippet sum "Sum"
Sum`!p snip.rv = open_paren()`${1:field}${2:; ${3:field...}}`!p
snip.rv = close_paren()`
endsnippet

snippet "var(iance)?" "Variance" r
Variance`!p snip.rv = open_paren()`${1:field}${2:; ${3:field...}}`!p
snip.rv = close_paren()`
endsnippet

snippet "variancep|varp" "VarianceP" r
VarianceP`!p snip.rv = open_paren()`${1:field}${2:; ${3:field...}}`!p
snip.rv = close_paren()`
endsnippet

# ------------------------------------------------------------------------------
# Summary functions

snippet "getsum(mary)?" "GetSummary" r
GetSummary`!p snip.rv = open_paren()`
	${1:summaryField};
	${2:breakField}
)
endsnippet

# ------------------------------------------------------------------------------
# Repeating functions

snippet "extend|extd" "Extend" r
Extend`!p snip.rv = open_paren()`${0:non-repeatingField}`!p
snip.rv = close_paren()`
endsnippet

snippet "getrep(etition)?" "GetRepetition" r
GetRepetition`!p snip.rv = open_paren()`
	${1:repeatingField};
	${2:number}
)
endsnippet

snippet last "Last"
Last`!p snip.rv = open_paren()`${0:field}`!p
snip.rv = close_paren()`
endsnippet

# ------------------------------------------------------------------------------
# Financial functions

snippet fv "FV"
FV`!p snip.rv = open_paren()`
	${1:payment};
	${2:interestRate};
	${3:periods}
)
endsnippet

snippet npv "NPV"
NPV`!p snip.rv = open_paren()`
	${1:payment};
	${2:interestRate}
)
endsnippet

snippet pmt "PMT"
PMT`!p snip.rv = open_paren()`
	${1:principal};
	${2:interestRate};
	${3:term}
)
endsnippet

snippet pv "PV"
PV`!p snip.rv = open_paren()`
	${1:payment};
	${2:interestRate};
	${3:periods}
)
endsnippet

# ------------------------------------------------------------------------------
# Trigonometric functions

snippet acos "Acos"
Acos`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet asin "Asin"
Asin`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet atan "Atan"
Atan`!p snip.rv = open_paren()`${0:number}`!p
snip.rv = close_paren()`
endsnippet

snippet cos "Cos"
Cos`!p snip.rv = open_paren()`${0:angleInRadians}`!p
snip.rv = close_paren()`
endsnippet

snippet "deg(rees)?" "Degrees" r
Degrees`!p snip.rv = open_paren()`${0:angleInRadians}`!p
snip.rv = close_paren()`
endsnippet

snippet "rad(ians)?" "Radians" r
Radians`!p snip.rv = open_paren()`${0:angleInDegrees}`!p
snip.rv = close_paren()`
endsnippet

snippet sin "Sin"
Sin`!p snip.rv = open_paren()`${0:angleInRadians}`!p
snip.rv = close_paren()`
endsnippet

snippet tan "Tan"
Tan`!p snip.rv = open_paren()`${0:angleInRadians}`!p
snip.rv = close_paren()`
endsnippet

# ------------------------------------------------------------------------------
# Logical functions

snippet case "Case"
Case`!p snip.rv = open_paren()`
	${1:test1};
	${2:result1}${3:;
	...${4:;
	${5:defaultResult}}}
)
endsnippet

snippet "cho(ose)?" "Choose" r
Choose`!p snip.rv = open_paren()`
	${1:test};
	${2:result0}${3:;
	${4:...}}
)
endsnippet

snippet "eval(uate)?" "Evaluate" r
Evaluate`!p snip.rv = open_paren()`
	${1:expression}${2:;
	${3:field}${4:;
	...}}
)
endsnippet

snippet "evaluationerror|evalerr" "EvaluationError" r
EvaluationError`!p snip.rv = open_paren()`${0:expression}`!p
snip.rv = close_paren()`
endsnippet

snippet "(execute)?sql" "ExecuteSQL" r
ExecuteSQL`!p snip.rv = open_paren()`
	${1:sqlQuery};
	${2:fieldSeparator};
	${3:rowSeparator}${4:;
	${5:arguments...}}
)
endsnippet

snippet "getasboolean|getb" "GetAsBoolean" r
GetAsBoolean`!p snip.rv = open_paren()`${0:data}`!p
snip.rv = close_paren()`
endsnippet

snippet "getf(ield)?" "GetField" r
GetField`!p snip.rv = open_paren()`${0:fieldName}`!p
snip.rv = close_paren()`
endsnippet

snippet "getfieldname|getfn" "GetFieldName" r
GetFieldName`!p snip.rv = open_paren()`${0:fieldName}`!p
snip.rv = close_paren()`
endsnippet

snippet "getlayoutobjectattribute|getloa" "GetLayoutObjectAttribute" r
GetLayoutObjectAttribute`!p snip.rv = open_paren()`
	${1:objectName};
	"$2`!p snip.rv = complete( t[2], ['objectType', 'hasFocus', 'containsFocus',
		'isFrontPanel', 'bounds', 'left', 'right', 'top', 'bottom', 'width',
		'height', 'rotation', 'startPoint', 'endPoint', 'source', 'content',
		'enclosingObject', 'containedObjects', 'isobjecthidden'] )`"${3:;
	${4:repetitionNumber};
	${5:portalRowNumber}}
)
endsnippet

snippet "getnth(record)?" "GetNthRecord" r
GetNthRecord`!p snip.rv = open_paren()`
	${1:fieldName};
	${2:recordNumber}
)
endsnippet

snippet if
If`!p snip.rv = open_paren()`
	${1:test};
	${2:result1}${3:;
	${4:result2}}
)
endsnippet

snippet "ise(mpty)?" "IsEmpty" r
IsEmpty`!p snip.rv = open_paren()`${0:field}`!p
snip.rv = close_paren()`
endsnippet

snippet "isv(alid)?" "IsValid" r
IsValid`!p snip.rv = open_paren()`${0:field}`!p
snip.rv = close_paren()`
endsnippet

snippet "isvalidexpression|isve" "IsValidExpression" r
IsValidExpression`!p snip.rv = open_paren()`${0:expression}`!p
snip.rv = close_paren()`
endsnippet

snippet let "Let"
Let`!p snip.rv = open_paren()`
	[
		${1:_var} = ${2:value}${3:;
		${4:_var} = ${5:value}}
	];

	${0:result}
)
endsnippet

snippet "look(up)?" "Lookup" r
Lookup`!p snip.rv = open_paren()`
	${1:sourceField}${2:;
	${3:failExpression}}
)
endsnippet

snippet "lookupnext|lookn" "LookupNext" r
LookupNext`!p snip.rv = open_paren()`
	${1:sourceField};
	$2`!p snip.rv = complete( t[2], ['Lower', 'Higher'] )`
)
endsnippet

# ------------------------------------------------------------------------------
# Design functions

# For the sake of every function having a snippet by name
snippet dbn "DatabaseNames"
DatabaseNames
endsnippet

snippet "fieldbounds|fb" "FieldBounds" r
FieldBounds`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:layoutName};
	${3:fieldName}
)
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "fieldcomment|fc" "FieldComment" r
snippet fieldcomment "FieldComment"
FieldComment`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:fieldname}
)
endsnippet
snippet fc "FieldComment"
FieldComment`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:fieldname}
)
endsnippet

snippet "fieldids|fid" "FieldIDs" r
FieldIDs`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:layoutName}
)
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "fieldnames|fn" "FieldNames" r
snippet fieldnames "FieldNames"
FieldNames`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:layoutName}
)
endsnippet
snippet fn "FieldNames"
FieldNames`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:layoutName}
)
endsnippet

snippet "fieldrepetitions|frep" "FieldRepetitions" r
FieldRepetitions`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:layoutName};
	${3:fieldName}
)
endsnippet

snippet "fieldstyle|fst" "FieldStyle" r
FieldStyle`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:layoutName};
	${3:fieldName}
)
endsnippet

snippet "fieldtype|fty" "FieldType" r
FieldType`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:fieldName}
)
endsnippet

snippet "getnextserialvalue|gnsv" "GetNextSerialValue" r
GetNextSerialValue`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:fieldName}
)
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "layoutids|lid" "LayoutIDs" r
snippet layoutids" "LayoutIDs"
LayoutIDs`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet
snippet lid "LayoutIDs"
LayoutIDs`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "layoutnames|lon" "LayoutNames" r
snippet layoutnames "LayoutNames"
LayoutNames`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet
snippet ln "LayoutNames"
LayoutNames`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet

snippet "layoutobjectnames|loon" "LayoutObjectNames" r
LayoutObjectNames`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:layoutName}
)
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "relationinfo|ri" "RelationInfo" r
snippet relationinfo "RelationInfo"
RelationInfo`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:tableOccurrenceName}
}
endsnippet
snippet ri "RelationInfo"
RelationInfo`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:tableOccurrenceName}
}
endsnippet

snippet "scriptids|sid" "ScriptIDs" r
ScriptIDs`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "scriptnames|sn" "ScriptNames" r
snippet scriptnames "ScriptNames"
ScriptNames`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet
snippet sn "ScriptNames"
ScriptNames`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet

snippet "tableids|tid" "TableIDs" r
TableIDs`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "tablenames|tn" "TableNames" r
snippet tablenames "TableNames"
TableNames`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet
snippet tn "TableNames"
TableNames`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet

snippet "valuelistids|vid" "ValidListIDs" r
ValueListIDs`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet

snippet "valuelistitems|vli" "ValueListItems" r
ValueListItems`!p snip.rv = open_paren()`
	${1:Get( FileName )};
	${2:valueList}
)
endsnippet

snippet "valuelistnames|vln" "ValueListNames" r
ValueListNames`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
# snippet "windownames|wn" "WindowNames" r
snippet windownames "WindowNames"
WindowNames`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet
snippet wn "WindowNames"
WindowNames`!p snip.rv = open_paren()`${0:Get( FileName  `!p
snip.rv = close_paren()`)
endsnippet

snippet "loc(ation)?" "Location" r
Location`!p snip.rv = open_paren()`
	${1:accuracy}${2:;
	${3:timeout}}
)
endsnippet

snippet "locationvalues|locv" "LocationValues" r
LocationValues`!p snip.rv = open_paren()`
	${1:accuracy}${2:;
	${3:timeout}}
)
endsnippet

# ------------------------------------------------------------------------------
# External functions

# might be left out, only useful for Pre-7 FileMaker plugins
snippet "external" "External" r
External`!p snip.rv = open_paren()`
	${1:nameOfFunction};
	${2:parameter}
)
endsnippet

# ------------------------------------------------------------------------------
# Get functions

snippet get
Get`!p snip.rv = open_paren()`$1`!p snip.rv = complete( t[1], ['AccountExtendedPrivileges', 'AccountName',
	'AccountPrivilegeSetName', 'ActiveFieldContents', 'ActiveFieldName',
	'ActiveFieldTableName', 'ActiveLayoutObjectName', 'ActiveModifierKeys',
	'ActivePortalRowNumber', 'ActiveRepetitionNumber', 'ActiveSelectionSize',
	'ActiveSelectionStart', 'AllowAbortState', 'AllowFormattingBarState',
	'ApplicationLanguage', 'ApplicationVersion', 'CalculationRepetitionNumber',
	'ConnectionAttributes', 'ConnectionState', 'CurrentDate',
	'CurrentExtendedPrivileges', 'CurrentHostTimestamp', 'CurrentPrivilegeSetName',
	'CurrentTime', 'CurrentTimestamp', 'CurrentTimeUTCMilliseconds',
	'CustomMenuSetName', 'DesktopPath', 'Device', 'DocumentsPath',
	'DocumentsPathListing', 'EncryptionState', 'ErrorCaptureState', 'FileName',
	'FilePath', 'FileSize', 'FoundCount', 'HighContrastColor', 'HighContrastState',
	'HostApplicationVersion', 'HostIPAddress', 'HostName', 'InstalledFMPlugins',
	'LastError', 'LastMessageChoice', 'LastODBCError', 'LayoutAccess',
	'LayoutCount', 'LayoutName', 'LayoutNumber', 'LayoutTableName',
	'LayoutViewState', 'ModifiedFields', 'MultiUserState', 'NetworkProtocol',
	'NetworkType', 'PageNumber', 'PersistentID', 'PreferencesPath', 'PrinterName',
	'QuickFindText', 'RecordAccess', 'RecordID', 'RecordModificationCount',
	'RecordNumber', 'RecordOpenCount', 'RecordOpenState', 'RequestCount',
	'RequestOmitState', 'ScreenDepth', 'ScreenHeight', 'ScreenWidth',
	'ScriptAnimationState', 'ScriptName', 'ScriptParameter', 'ScriptResult',
	'SortState', 'StatusAreaState', 'SystemDrive', 'SystemIPAddress',
	'SystemLanguage', 'SystemNICAddress', 'SystemPlatform', 'SystemVersion',
	'TemporaryPath', 'TextRulerVisible', 'TotalRecordCount', 'TriggerCurrentPanel',
	'TriggerGestureInfo', 'TriggerKeystroke', 'TriggerModifierKeys',
	'TriggerTargetPanel', 'UserCount', 'UserName', 'UseSystemFormatsState', 'UUID',
	'WindowContentHeight', 'WindowContentWidth', 'WindowDesktopHeight',
	'WindowDesktopWidth', 'WindowHeight', 'WindowLeft', 'WindowMode', 'WindowName',
	'WindowOrientation', 'WindowStyle', 'WindowVisible', 'WindowWidth',
	'WindowZoomLevel'] )``!p snip.rv = close_paren()`
endsnippet

snippet getaep "Get( AccountExtendedPrivileges )"
Get`!p snip.rv = open_paren()`AccountExtendedPrivileges`!p
snip.rv = close_paren()`
endsnippet

snippet getan "Get( AccountName )"
Get`!p snip.rv = open_paren()`AccountName`!p
snip.rv = close_paren()`
endsnippet

snippet getapsn "Get( AccountPrivilegeSetName )"
Get`!p snip.rv = open_paren()`AccountPrivilegeSetName`!p
snip.rv = close_paren()`
endsnippet

snippet getafc "Get( ActiveFieldContents )"
Get`!p snip.rv = open_paren()`ActiveFieldContents`!p
snip.rv = close_paren()`
endsnippet

snippet getafn "Get( ActiveFieldName )"
Get`!p snip.rv = open_paren()`ActiveFieldName`!p
snip.rv = close_paren()`
endsnippet

snippet getaftn "Get( ActiveFieldTableName )"
Get`!p snip.rv = open_paren()`ActiveFieldTableName`!p
snip.rv = close_paren()`
endsnippet

snippet getalon "Get( ActiveLayoutObjectName )"
Get`!p snip.rv = open_paren()`ActiveLayoutObjectName`!p
snip.rv = close_paren()`
endsnippet

snippet getamk "Get( ActiveModifierKeys )"
Get`!p snip.rv = open_paren()`ActiveModifierKeys`!p
snip.rv = close_paren()`
endsnippet

snippet getaprn "Get( ActivePortalRowNumber )"
Get`!p snip.rv = open_paren()`ActivePortalRowNumber`!p
snip.rv = close_paren()`
endsnippet

snippet getarn "Get( ActiveRepetitionNumber )"
Get`!p snip.rv = open_paren()`ActiveRepetitionNumber`!p
snip.rv = close_paren()`
endsnippet

snippet getass "Get( ActiveSelectionSize )"
Get`!p snip.rv = open_paren()`ActiveSelectionSize`!p
snip.rv = close_paren()`
endsnippet

snippet getasst "Get( ActiveSelectionStart )"
Get`!p snip.rv = open_paren()`ActiveSelectionStart`!p
snip.rv = close_paren()`
endsnippet

snippet getaas "Get( AllowAbortState )"
Get`!p snip.rv = open_paren()`AllowAbortState`!p
snip.rv = close_paren()`
endsnippet

snippet getafbs "Get( AllowFormattingBarState )"
Get`!p snip.rv = open_paren()`AllowFormattingBarState`!p
snip.rv = close_paren()`
endsnippet

snippet getal "Get( ApplicationLanguage )"
Get`!p snip.rv = open_paren()`ApplicationLanguage`!p
snip.rv = close_paren()`
endsnippet

snippet getav "Get( ApplicationVersion )"
Get`!p snip.rv = open_paren()`ApplicationVersion`!p
snip.rv = close_paren()`
endsnippet

snippet getcrn "Get( CalculationRepetitionNumber )"
Get`!p snip.rv = open_paren()`CalculationRepetitionNumber`!p
snip.rv = close_paren()`
endsnippet

snippet getca "Get( ConnectionAttributes )"
Get`!p snip.rv = open_paren()`ConnectionAttributes`!p
snip.rv = close_paren()`
endsnippet

snippet getcs "Get( ConnectionState )"
Get`!p snip.rv = open_paren()`ConnectionState`!p
snip.rv = close_paren()`
endsnippet

snippet "(get)?cd" "Get( CurrentDate )" r
Get`!p snip.rv = open_paren()`CurrentDate`!p
snip.rv = close_paren()`
endsnippet

snippet getcep "Get( CurrentExtendedPrivileges )"
Get`!p snip.rv = open_paren()`CurrentExtendedPrivileges`!p
snip.rv = close_paren()`
endsnippet

snippet getcht "Get( CurrentHostTimestamp )"
Get`!p snip.rv = open_paren()`CurrentHostTimestamp`!p
snip.rv = close_paren()`
endsnippet

snippet getcpsn "Get( CurrentPrivilegeSetName )"
Get`!p snip.rv = open_paren()`CurrentPrivilegeSetName`!p
snip.rv = close_paren()`
endsnippet

# TODO: Find a way to get a single version of this to work without conflicting
#       with other triggers that end in the same characters.
#snippet "getct|ct" "Get( CurrentTime )" rw
snippet getct "Get( CurrentTime )"
Get`!p snip.rv = open_paren()`CurrentTime`!p
snip.rv = close_paren()`
endsnippet
snippet ct "Get( CurrentTime )"
Get`!p snip.rv = open_paren()`CurrentTime`!p
snip.rv = close_paren()`
endsnippet

snippet "(get)?cts" "Get( CurrentTimestamp )" r
Get`!p snip.rv = open_paren()`CurrentTimestamp`!p
snip.rv = close_paren()`
endsnippet

snippet getctutcm "Get( CurrentTimeUTCMilliseconds )"
Get`!p snip.rv = open_paren()`CurrentTimeUTCMilliseconds`!p
snip.rv = close_paren()`
endsnippet

snippet getcmsn "Get( CustomMenuSetName )"
Get`!p snip.rv = open_paren()`CustomMenuSetName`!p
snip.rv = close_paren()`
endsnippet

snippet getdp "Get( DesktopPath )"
Get`!p snip.rv = open_paren()`DesktopPath`!p
snip.rv = close_paren()`
endsnippet

snippet getdv "Get( Device )"
Get`!p snip.rv = open_paren()`Device`!p
snip.rv = close_paren()`
endsnippet

snippet getdocp "Get( DocumentsPath )"
Get`!p snip.rv = open_paren()`DocumentsPath`!p
snip.rv = close_paren()`
endsnippet

snippet getdpl "Get( DocumentsPathListing )"
Get`!p snip.rv = open_paren()`DocumentsPathListing`!p
snip.rv = close_paren()`
endsnippet

snippet getes "Get( EncryptionState )"
Get`!p snip.rv = open_paren()`EncryptionState`!p
snip.rv = close_paren()`
endsnippet

snippet geters "Get( ErrorCaptureState )"
Get`!p snip.rv = open_paren()`ErrorCaptureState`!p
snip.rv = close_paren()`
endsnippet

snippet getfmp "Get( FileMakerPath )"
Get`!p snip.rv = open_paren()`FileMakerPath`!p
snip.rv = close_paren()`
endsnippet

snippet getfln "Get( FileName )"
Get`!p snip.rv = open_paren()`FileName`!p
snip.rv = close_paren()`
endsnippet

snippet getfp "Get( FilePath )"
Get`!p snip.rv = open_paren()`FilePath`!p
snip.rv = close_paren()`
endsnippet

snippet getfs "Get( FileSize )"
Get`!p snip.rv = open_paren()`FileSize`!p
snip.rv = close_paren()`
endsnippet

snippet getfc "Get( FoundCount )"
Get`!p snip.rv = open_paren()`FoundCount`!p
snip.rv = close_paren()`
endsnippet

snippet gethcc "Get( HighContrastColor )"
Get`!p snip.rv = open_paren()`HighContrastColor`!p
snip.rv = close_paren()`
endsnippet

snippet gethcs "Get( HighContrastState )"
Get`!p snip.rv = open_paren()`HighContrastState`!p
snip.rv = close_paren()`
endsnippet

snippet gethav "Get( HostApplicationVersion )"
Get`!p snip.rv = open_paren()`HostApplicationVersion`!p
snip.rv = close_paren()`
endsnippet

snippet gethipa "Get( HostIPAddress )"
Get`!p snip.rv = open_paren()`HostIPAddress`!p
snip.rv = close_paren()`
endsnippet

snippet gethn "Get( HostName )"
Get`!p snip.rv = open_paren()`HostName`!p
snip.rv = close_paren()`
endsnippet

snippet getifmp "Get( InstalledFMPlugins )"
Get`!p snip.rv = open_paren()`InstalledFMPlugins`!p
snip.rv = close_paren()`
endsnippet

snippet getle "Get( LastError )"
Get`!p snip.rv = open_paren()`LastError`!p
snip.rv = close_paren()`
endsnippet

snippet getlmc "Get( LastMessageChoice )"
Get`!p snip.rv = open_paren()`LastMessageChoice`!p
snip.rv = close_paren()`
endsnippet

snippet getlodbce "Get( LastODBCError )"
Get`!p snip.rv = open_paren()`LastODBCError`!p
snip.rv = close_paren()`
endsnippet

snippet getla "Get( LayoutAccess )"
Get`!p snip.rv = open_paren()`LayoutAccess`!p
snip.rv = close_paren()`
endsnippet

snippet getlc "Get( LayoutCount )"
Get`!p snip.rv = open_paren()`LayoutCount`!p
snip.rv = close_paren()`
endsnippet

snippet getln "Get( LayoutName )"
Get`!p snip.rv = open_paren()`LayoutName`!p
snip.rv = close_paren()`
endsnippet

snippet getlnu "Get( LayoutNumber )"
Get`!p snip.rv = open_paren()`LayoutNumber`!p
snip.rv = close_paren()`
endsnippet

snippet getltn "Get( LayoutTableName )"
Get`!p snip.rv = open_paren()`LayoutTableName`!p
snip.rv = close_paren()`
endsnippet

snippet getlvs "Get( LayoutViewState )"
Get`!p snip.rv = open_paren()`LayoutViewState`!p
snip.rv = close_paren()`
endsnippet

snippet getmf "Get( ModifiedFields )"
Get`!p snip.rv = open_paren()`ModifiedFields`!p
snip.rv = close_paren()`
endsnippet

snippet getmus "Get( MultiUserState )"
Get`!p snip.rv = open_paren()`MultiUserState`!p
snip.rv = close_paren()`
endsnippet

snippet getnp "Get( Network Protocol )"
Get`!p snip.rv = open_paren()`NetworkProtocol`!p
snip.rv = close_paren()`
endsnippet

snippet getnt "Get( NetworkType )"
Get`!p snip.rv = open_paren()`NetworkType`!p
snip.rv = close_paren()`
endsnippet

snippet getpn "Get( PageNumber )"
Get`!p snip.rv = open_paren()`PageNumber`!p
snip.rv = close_paren()`
endsnippet

snippet getpid "Get( PersistentID )"
Get`!p snip.rv = open_paren()`PersistentID`!p
snip.rv = close_paren()`
endsnippet

snippet getpp "Get( PreferencesPath )"
Get`!p snip.rv = open_paren()`PreferencesPath`!p
snip.rv = close_paren()`
endsnippet

snippet getprn "Get( PrinterName )"
Get`!p snip.rv = open_paren()`PrinterName`!p
snip.rv = close_paren()`
endsnippet

snippet getqft "Get( QuickFindText )"
Get`!p snip.rv = open_paren()`QuickFindText`!p
snip.rv = close_paren()`
endsnippet

snippet getra "Get( RecordAccess )"
Get`!p snip.rv = open_paren()`RecordAccess`!p
snip.rv = close_paren()`
endsnippet

snippet getrid "Get( RecordID )"
Get`!p snip.rv = open_paren()`RecordID`!p
snip.rv = close_paren()`
endsnippet

snippet getrmc "Get( RecordModificationCount )"
Get( RecordModificationCount )
endsnippet

snippet getrn "Get( RecordNumber )"
Get`!p snip.rv = open_paren()`RecordNumber`!p
snip.rv = close_paren()`
endsnippet

snippet getroc "Get( RecordOpenCount )"
Get`!p snip.rv = open_paren()`RecordOpenCount`!p
snip.rv = close_paren()`
endsnippet

snippet getros "Get( RecordOpenState )"
Get`!p snip.rv = open_paren()`RecordOpenState`!p
snip.rv = close_paren()`
endsnippet

snippet getrqc "Get( RequestCount )"
Get`!p snip.rv = open_paren()`RequestCount`!p
snip.rv = close_paren()`
endsnippet

snippet getrqos "Get( RequestOmitState )"
Get`!p snip.rv = open_paren()`RequestOmitState`!p
snip.rv = close_paren()`
endsnippet

snippet getsd "Get( ScreenDepth )"
Get`!p snip.rv = open_paren()`ScreenDepth`!p
snip.rv = close_paren()`
endsnippet

snippet getsh "Get( ScreenHeight )"
Get`!p snip.rv = open_paren()`ScreenHeight`!p
snip.rv = close_paren()`
endsnippet

snippet getsw "Get( ScreenWidth )"
Get`!p snip.rv = open_paren()`ScreenWidth`!p
snip.rv = close_paren()`
endsnippet

snippet getsas "Get( ScriptAnimationState )"
Get`!p snip.rv = open_paren()`ScriptAnimationState`!p
snip.rv = close_paren()`
endsnippet

snippet getsn "Get( ScriptName )"
Get`!p snip.rv = open_paren()`ScriptName`!p
snip.rv = close_paren()`
endsnippet

snippet getsp "Get( ScriptParameter )"
Get`!p snip.rv = open_paren()`ScriptParameter`!p
snip.rv = close_paren()`
endsnippet

snippet getsr "Get( ScriptResult )"
Get`!p snip.rv = open_paren()`ScriptResult`!p
snip.rv = close_paren()`
endsnippet

snippet getss "Get( SortState )"
Get`!p snip.rv = open_paren()`SortState`!p
snip.rv = close_paren()`
endsnippet

snippet getsars "Get( StatusAreaState )"
Get`!p snip.rv = open_paren()`StatusAreaState`!p
snip.rv = close_paren()`
endsnippet

snippet getsdv "Get( SystemDrive )"
Get`!p snip.rv = open_paren()`SystemDrive`!p
snip.rv = close_paren()`
endsnippet

snippet getsipa "Get( SystemIPAddress )"
Get`!p snip.rv = open_paren()`SystemIPAddress`!p
snip.rv = close_paren()`
endsnippet

snippet getsl "Get( SystemLanguage )"
Get`!p snip.rv = open_paren()`SystemLanguage`!p
snip.rv = close_paren()`
endsnippet

snippet getsnica "Get( SystemNICAddress )"
Get`!p snip.rv = open_paren()`SystemNICAddress`!p
snip.rv = close_paren()`
endsnippet

snippet getspl "Get( SystenPlatform )"
Get`!p snip.rv = open_paren()`SystemPlatform`!p
snip.rv = close_paren()`
endsnippet

snippet getsv "Get( SystemVersion )"
Get`!p snip.rv = open_paren()`SystemVersion`!p
snip.rv = close_paren()`
endsnippet

snippet gettp "Get( TemporaryPath )"
Get`!p snip.rv = open_paren()`TemporaryPath`!p
snip.rv = close_paren()`
endsnippet

snippet gettrv "Get( TextRulerVisible )"
Get`!p snip.rv = open_paren()`TextRulerVisible`!p
snip.rv = close_paren()`
endsnippet

snippet gettrc "Get( TotalRecordCount )"
Get`!p snip.rv = open_paren()`TotalRecordCount`!p
snip.rv = close_paren()`
endsnippet

snippet gettcp "Get( TriggerCurrentPanel )"
Get`!p snip.rv = open_paren()`TriggerCurrentPanel`!p
snip.rv = close_paren()`
endsnippet

snippet gettgi "Get( TriggerGestureInfo )"
Get`!p snip.rv = open_paren()`TriggerGestureInfo`!p
snip.rv = close_paren()`
endsnippet

snippet gettk "Get( TriggerKeystroke )"
Get`!p snip.rv = open_paren()`TriggerKeystroke`!p
snip.rv = close_paren()`
endsnippet

snippet gettmk "Get( TriggerModifierKeys )"
Get`!p snip.rv = open_paren()`TriggerModifierKeys`!p
snip.rv = close_paren()`
endsnippet

snippet getttp "Get( TriggerTargetPanel )"
Get`!p snip.rv = open_paren()`TriggerTargetPanel`!p
snip.rv = close_paren()`
endsnippet

snippet getuc "Get( UserCount )"
Get`!p snip.rv = open_paren()`UserCount`!p
snip.rv = close_paren()`
endsnippet

snippet getun "Get( UserName )"
Get`!p snip.rv = open_paren()`UserName`!p
snip.rv = close_paren()`
endsnippet

snippet getusfs "Get( UseSystemFormatsState )"
Get`!p snip.rv = open_paren()`UseSystemFormatsState`!p
snip.rv = close_paren()`
endsnippet

snippet "getuu(id)?" "Get( UUID )" r
Get`!p snip.rv = open_paren()`UUID`!p
snip.rv = close_paren()`
endsnippet

snippet getwch "Get( WindowContentHeight )"
Get`!p snip.rv = open_paren()`WindowContentHeight`!p
snip.rv = close_paren()`
endsnippet

snippet getwcw "Get( WindowContentWidth )"
Get`!p snip.rv = open_paren()`WindowContentWidth`!p
snip.rv = close_paren()`
endsnippet

snippet getwdh "Get( WindowDesktopHeight )"
Get`!p snip.rv = open_paren()`WindowDesktopHeight`!p
snip.rv = close_paren()`
endsnippet

snippet getwdw "Get( WindowDesktopWidth )"
Get`!p snip.rv = open_paren()`WindowDesktopWidth`!p
snip.rv = close_paren()`
endsnippet

snippet getwh "Get( WindowHeight )"
Get`!p snip.rv = open_paren()`WindowHeight`!p
snip.rv = close_paren()`
endsnippet

snippet getwl "Get( WindowLeft )"
Get`!p snip.rv = open_paren()`WindowLeft`!p
snip.rv = close_paren()`
endsnippet

snippet getwm "Get( WindowMode )"
Get`!p snip.rv = open_paren()`WindowMode`!p
snip.rv = close_paren()`
endsnippet

snippet getwn "Get( WindowName )"
Get`!p snip.rv = open_paren()`WindowName`!p
snip.rv = close_paren()`
endsnippet

snippet getwo "Get( WindowOrientation )"
Get`!p snip.rv = open_paren()`WindowOrientation`!p
snip.rv = close_paren()`
endsnippet

snippet getws "Get( WindowStyle )"
Get`!p snip.rv = open_paren()`WindowStyle`!p
snip.rv = close_paren()`
endsnippet

snippet getwt "Get( WindowTop )"
Get`!p snip.rv = open_paren()`WindowTop`!p
snip.rv = close_paren()`
endsnippet

snippet getwv "Get( WindowVisible )"
Get`!p snip.rv = open_paren()`WindowVisible`!p
snip.rv = close_paren()`
endsnippet

snippet getww "Get( WindowWidth )"
Get`!p snip.rv = open_paren()`WindowWidth`!p
snip.rv = close_paren()`
endsnippet

snippet getwzl "Get( WindowZoomLevel )"
Get`!p snip.rv = open_paren()`WindowZoomLevel`!p
snip.rv = close_paren()`
endsnippet
